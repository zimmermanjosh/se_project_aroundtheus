4th submission
-- check utils.js updated and fixed
-- index.html updated added modal__button_disabled class (line 85,121)
-- index.js -- Card.js 404 -- testing -- fixed in part III - Submission4
-- index.js -- fixed comments to add constants.js - new import and export
-- line 152<now 62> after refactor -- delete
-- profile create button re-trigger -- fixed
-- update like button
-- garbage collecting
-- use open modal from utils.js
-- use no keyup function in card.js use it from utils.js

5th Submission
-- card.js - This method should not have any arguments, use this._cardElement
-- card.js - Please remove this method, it's not the Card class responsibility -- _handleEscapeKey
-- index.js -- remove IF statement line 60
-- index.js -- remove line 87

6th
fix formvaild
import Card from '../components/Card.js';
import FormValidator from '../components/FormValidator.js';
import {openModal, closeModal, handleEscKey, handlePopupClose} from "../utils/utils.js";
import{
  initializeCards,
  profileEditModal,
  profileEditButton,
  profileEditCloseButton,
  profileTitleInput,
  profileDescriptionInput,
  profileTitle,
  profileDescription,
  profileEditForm,
  elementAddModal,
  elementAddButton,
  elementCloseButton,
  elementAddForm,
  elementList,
  elNameInput,
  elUrlInput,
  elementImageModal,
  elementImageModalClose,
  elSaveButton,
  elementTemplate,
  elementGallery,
  modalInputs
}from '../constants/variables.js'

// object configuration
const config = {
  formSelector: ".modal__form",
  inputSelector: ".modal__input",
  submitButtonSelector: ".modal__button",
  inactiveButtonClass: "modal__button_disabled",
  inputErrorClass: "modal__input_type_error",
  errorClass: "modal__error_visible",
}

// new vaildation logic
const editProfileValidator = new FormValidator(config, profileEditForm);
editProfileValidator.enableValidation();

const editImageValidator = new FormValidator(config, elementAddModal)
editImageValidator.enableValidation();


// Functions
function renderElement(elementData) {
  const card = new Card(elementData, "#element-template", elementImageModal);
  const cardElement = card.generateCard();
  elementGallery.prepend(cardElement);
}

function handleProfileEditSubmit(evt) {
  evt.preventDefault();
  /*if (
    profileTitle &&
    profileDescription &&
    profileTitleInput
  ) {*/
    profileTitle.textContent = profileTitleInput.value;
    profileDescription.textContent = profileDescriptionInput.value;
    closeModal(profileEditModal);
    editProfileValidator.resetValidation(); // Reset validation for the profile edit form
    // Disable the submit button
    //profileEditForm.querySelector('.modal__button').disabled = true;
  //}
  /*profileEditForm.addEventListener("submit", (evt) => {
    handleProfileEditSubmit(evt);
    editProfileValidator.resetValidation(); // Reset validation for the profile edit form
  });*/

}

function handleElementImageModal(evt) {
  evt.preventDefault();
  const name = elNameInput.value;
  const url = elUrlInput.value;

  const elementData = {
    name: name,
    url: url
  };

  renderElement(elementData);

  closeModal(elementAddModal);

  // Disable the submit button
  //const createButton = elementAddForm.querySelector('#imageSubmitButton');
  const createButton = elementAddForm.querySelector('.modal__button');
  //createButton.disabled = true;
  evt.target.reset();
  editImageValidator.resetValidation()
}

/* event Listeners */
initializeCards.forEach((elementData) => {
  renderElement(elementData);
});

elementImageModal.addEventListener("mousedown", handlePopupClose);

profileEditModal.addEventListener("mousedown", handlePopupClose);

elementAddModal.addEventListener("mousedown", handlePopupClose);
elementAddButton.addEventListener("click", () => {
  openModal(elementAddModal);
});

profileEditButton.addEventListener("click", () => {
  profileTitleInput.value = profileTitle.textContent;
  profileDescriptionInput.value = profileDescription.textContent;
  openModal(profileEditModal);
});

//profileEditForm.addEventListener("submit", handleProfileEditSubmit);

elementAddForm.addEventListener("submit", handleElementImageModal);
